format_version: 6
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
    - SAMPLE_APP_URL: https://github.com/adborbas/sample-apps-flutter-ios-android.git
    - SAMPLE_APP_BRANCH: not_route_project
    - ORIGIN_SOURCE_DIR: $BITRISE_SOURCE_DIR

workflows:
  ci:
    before_run:
      - audit-this-step
    steps:
      - go-list:
      - golint:
      - errcheck:
      - go-test:
    after_run:
      - test

  test:
    title: Run E2E tests
    before_run:
      - test-without-codecoverage
      - test-with-codecoverage

  prepare-test:
    title: Prepare test
    steps:
      - script:
          title: Delete _tmp
          inputs:
            - content: |-
                #!/bin/bash
                set -ex
                cd ${ORIGIN_SOURCE_DIR}
                rm -rf "./_tmp"
                mkdir "_tmp"
      - change-workdir:
          title: Switch working dir to test / _tmp dir
          description: |-
            To prevent step testing issues, like referencing relative
            files with just './some-file' in the step's code, which would
            work for testing the step from this directory directly
            but would break if the step is included in another `bitrise.yml`.
          run_if: true
          inputs:
            - path: ${ORIGIN_SOURCE_DIR}/_tmp
            - is_create_path: true
      - script:
          title: Clone sample app
          inputs:
            - content: git clone $SAMPLE_APP_URL -b $SAMPLE_APP_BRANCH .
      - flutter-installer:

  test-without-codecoverage:
    title: "Run without code coverage"
    before_run:
      - prepare-test
    after_run:
      - validate-test
    steps:
      - path::./:
          inputs:
            - project_location: "$BITRISE_SOURCE_DIR/src"

  test-with-codecoverage:
    title: "Run with code coverage"
    before_run:
      - prepare-test
    after_run:
      - validate-test
      - validate-coverage
    steps:
      - path::./:
          inputs:
            - project_location: "$BITRISE_SOURCE_DIR/src"
            - generate_code_coverage_files: "yes"

  validate-test:
    steps:
      - script:
          title: Check for JUNIT output
          inputs:
            - content: |-
                #!/bin/bash
                set -ex

                echo "Checking for JUNIT output"
                if ls $BITRISE_TEST_RESULT_DIR/../*/Flutter\ test\ results/flutter_junit_test_results.xml 1> /dev/null 2>&1; then
                  echo "JUNIT data exists."
                else
                  echo "JUNIT data does not exist."
                  exit 1
                fi

                echo "Checking for json test report data at $BITRISE_FLUTTER_TESTRESULT_PATH"
                if [ -f "$BITRISE_FLUTTER_TESTRESULT_PATH" ]; then
                  echo "JSON report data exists."
                else
                  echo "JSON report data does not exist."
                  exit 1
                fi

  validate-coverage:
    steps:
      - script:
          title: Check for coverage output
          inputs:
            - content: |-
                #!/bin/bash
                set -ex

                echo "Checking for coverage data at $BITRISE_FLUTTER_COVERAGE_PATH"
                if [ -f "$BITRISE_FLUTTER_COVERAGE_PATH" ]; then
                  echo "Coverage data exists."
                else
                  echo "Coverage data does not exist as expected."
                  exit 1
                fi

  # ----------------------------------------------------------------
  # --- workflows to Share this step into a Step Library
  audit-this-step:
    steps:
      - script:
          inputs:
            - content: |-
                #!/bin/bash
                set -ex
                stepman audit --step-yml ./step.yml
