format_version: 6
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - SAMPLE_APP_URL: https://github.com/bitrise-samples/sample-apps-flutter-ios-android.git
  - ORIGIN_SOURCE_DIR: $BITRISE_SOURCE_DIR

  
workflows:
  ci:
    before_run:
    - audit-this-step
    steps:
    - go-list:
    - golint:
    - errcheck:
    - go-test:
    after_run:
    - test

  test:
    steps:
    - script:
        title: Delete _tmp
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            cd ${ORIGIN_SOURCE_DIR}
            rm -rf "./_tmp"
            mkdir "_tmp"
    - change-workdir:
        title: Switch working dir to test / _tmp dir
        description: |-
          To prevent step testing issues, like referencing relative
          files with just './some-file' in the step's code, which would
          work for testing the step from this directory directly
          but would break if the step is included in another `bitrise.yml`.
        run_if: true
        inputs:
        - path: ${ORIGIN_SOURCE_DIR}/_tmp
        - is_create_path: true
    - script:
        title: Clone sample app
        inputs:
        - content: git clone $SAMPLE_APP_URL -b manual .
    - flutter-installer:
    - path::./:
        title: Run without code coverage
    - script:
        title: Check for JUNIT output
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            echo "Checking for JUNIT output"
            if ls $BITRISE_TEST_RESULT_DIR/../*/Flutter\ test\ results/flutter_junit_test_results.xml 1> /dev/null 2>&1; then
              echo "JUNIT data exists."
            else
              echo "JUNIT data does not exist."
              exit 1
            fi

            echo "Checking for json test report data at $BITRISE_FLUTTER_TESTRESULT_PATH"
            if [ -f "$BITRISE_FLUTTER_TESTRESULT_PATH" ]; then
              echo "JSON report data exists."
            else
              echo "JSON report data does not exist."
              exit 1
            fi

            echo "Checking for coverage data at $BITRISE_FLUTTER_COVERAGE_PATH"
            if [ -f "$BITRISE_FLUTTER_COVERAGE_PATH" ]; then
              echo "Coverage data exists."
              exit 1
            else
              echo "Coverage data does not exist as expected."
            fi
    - path::./:
        title: Run generating code coverage
        inputs:
        - generate_code_coverage_files: "yes"
    - script:
        title: Test step results
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            echo "Checking for JUNIT output"
            if ls $BITRISE_TEST_RESULT_DIR/../*/Flutter\ test\ results/flutter_junit_test_results.xml 1> /dev/null 2>&1; then
              echo "JUNIT data exists."
            else
              echo "JUNIT data does not exist."
              exit 1
            fi

            echo "Checking for json test report data at $BITRISE_FLUTTER_TESTRESULT_PATH"
            if [ -f "$BITRISE_FLUTTER_TESTRESULT_PATH" ]; then
              echo "JSON report data exists."
            else
              echo "JSON report data does not exist."
              exit 1
            fi

            echo "Checking for coverage data at $BITRISE_FLUTTER_COVERAGE_PATH"
            if [ -f "$BITRISE_FLUTTER_COVERAGE_PATH" ]; then
              echo "Coverage data exists."
            else
              echo "Coverage data does not exist."
              exit 1
            fi

  # ----------------------------------------------------------------
  # --- workflows to Share this step into a Step Library
  audit-this-step:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            stepman audit --step-yml ./step.yml
